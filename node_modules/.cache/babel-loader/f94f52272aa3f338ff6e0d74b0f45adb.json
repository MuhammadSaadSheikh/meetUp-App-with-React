{"ast":null,"code":"var _jsxFileName = \"/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Location/index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker } from \"react-google-maps\"; //fireabse\n\nimport { setUser } from \"../../config/firebase\"; //userId\n\nconst userId = localStorage.getItem(\"userId\");\nexport default class Location extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.currentLocationOfUser = () => {\n      navigator.geolocation.getCurrentPosition(positon => {\n        console.log('position==>', positon);\n        const _positon$coords = positon.coords,\n              latitude = _positon$coords.latitude,\n              longitude = _positon$coords.longitude;\n        this.setState({\n          coords: {\n            latitude,\n            longitude\n          }\n        });\n      });\n    };\n\n    this.state = {\n      coords: {}\n    };\n  }\n\n  componentDidMount() {\n    this.currentLocationOfUser();\n  }\n\n  // updateUserLocation = async()=>{\n  //   const {coords} = this.state\n  //   const {history} = this.props\n  // }\n  render() {\n    const coords = this.state.coords;\n    return React.createElement(\"div\", {\n      clasName: 'mainContainer',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MyMapComponent, {\n      isMarkerShown: true,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"500px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      coords: coords,\n      updateLocation: this.updateLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this._handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n} //Map Component\n\nconst MyMapComponent = withScriptjs(withGoogleMap(props => {\n  const coords = props.coords,\n        updateLocation = props.updateLocation,\n        isMarkerShown = props.isMarkerShown;\n  return React.createElement(GoogleMap, {\n    center: {\n      lat: coords.latitude,\n      lng: coords.longitude\n    },\n    defaultZoom: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, isMarkerShown && React.createElement(Marker, {\n    draggable: true,\n    position: {\n      lat: coords.latitude,\n      lng: coords.longitude\n    },\n    onDragEnd: position => {\n      updateLocation(position);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n}));","map":{"version":3,"sources":["/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Location/index.js"],"names":["React","withGoogleMap","withScriptjs","GoogleMap","Marker","setUser","userId","localStorage","getItem","Location","Component","constructor","props","currentLocationOfUser","navigator","geolocation","getCurrentPosition","positon","console","log","coords","latitude","longitude","setState","state","componentDidMount","render","height","updateLocation","_handleSubmit","MyMapComponent","isMarkerShown","lat","lng","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nimport {withGoogleMap, withScriptjs, GoogleMap, Marker } from \"react-google-maps\";\r\n\r\n//fireabse\r\nimport { setUser } from \"../../config/firebase\";\r\n\r\n//userId\r\nconst userId = localStorage.getItem(\"userId\");\r\n\r\nexport default class Location extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n      this.state = {\r\n        coords : {}\r\n      }\r\n    }\r\n    componentDidMount(){\r\n      this.currentLocationOfUser()\r\n    }\r\n\r\n    currentLocationOfUser = ()=>{\r\n      navigator.geolocation.getCurrentPosition(positon =>{\r\n        console.log('position==>' , positon)\r\n        const {latitude , longitude} = positon.coords \r\n        this.setState({coords : {latitude, longitude}})\r\n      })\r\n    }\r\n\r\n    // updateUserLocation = async()=>{\r\n    //   const {coords} = this.state\r\n    //   const {history} = this.props\r\n    // }\r\n\r\n    render(){\r\n      const {coords} = this.state\r\n      return(\r\n        <div clasName ={'mainContainer'}>\r\n           <MyMapComponent\r\n          isMarkerShown\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<div style={{ height: \"100%\" }} />}\r\n          containerElement={<div style={{ height: \"500px\" }} />}\r\n          mapElement={<div style={{ height: \"100%\" }} />}\r\n          coords={coords}\r\n          updateLocation={this.updateLocation}\r\n        />\r\n        <button onClick={this._handleSubmit}>Submit</button>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n//Map Component\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => {\r\n    const { coords, updateLocation, isMarkerShown } = props;\r\n    return (\r\n      <GoogleMap\r\n        center={{\r\n          lat: coords.latitude,\r\n          lng: coords.longitude\r\n        }}\r\n        defaultZoom={20}\r\n      >\r\n        {isMarkerShown && (\r\n          <Marker\r\n            draggable={true}\r\n            position={{\r\n              lat: coords.latitude,\r\n              lng: coords.longitude\r\n            }}\r\n            onDragEnd={position => {\r\n              updateLocation(position);\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n    );\r\n  })\r\n);\r\n"]},"metadata":{},"sourceType":"module"}