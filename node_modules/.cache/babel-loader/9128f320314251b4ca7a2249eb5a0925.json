{"ast":null,"code":"var _jsxFileName = \"/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Location/index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker } from \"react-google-maps\"; //fireabse\n\nimport { setUser } from \"../../config/firebase\"; //userId\n\nconst userId = localStorage.getItem(\"userId\");\nexport default class Location extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.userCurrentLocation = () => {\n      // const {coords} = this.state\n      navigator.geolocation.getCurrentPosition(position => {\n        const _position$coords = position.coords,\n              latitude = _position$coords.latitude,\n              longitude = _position$coords.longitude;\n        this.setState({\n          coords: {\n            latitude,\n            longitude\n          }\n        });\n      });\n    };\n\n    this.updateUserLocation = () => {\n      const coords = this.state.coords;\n      const _coords$latlng = coords.latlng,\n            lat = _coords$latlng.lat,\n            lng = _coords$latlng.lng;\n      let userLocation = {\n        latitude: lat(),\n        longitude: lng()\n      };\n      this.setState({\n        coords: userLocation\n      });\n    };\n\n    this.submitLocation = async () => {\n      const coords = this.state.coords;\n      const history = this.props.history;\n\n      try {\n        if (coords && !coords.latitude || !coords.longitude) {\n          alert(\"Select proper location!\");\n          return;\n        } else {\n          await setUser(userId, {\n            coords,\n            register: true\n          });\n          alert(\"set user location\");\n          history.replace(\"/\");\n        }\n      } catch (error) {\n        console.log(\"submit user location error ==>\", error);\n      }\n    };\n\n    this.state = {\n      coords: {}\n    };\n  }\n\n  componentDidMount() {\n    this.userCurrentLocation();\n  }\n\n  render() {\n    const coords = this.state.coords;\n    return React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nestedWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(MyMapComponent, {\n      isMarkerShown: true,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: `400px`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n} //map component\n\nconst MyMapComponent = withScriptjs(withGoogleMap(props => {\n  const coords = props.coords,\n        updateLocation = props.updateLocation,\n        isMarkerShown = props.isMarkerShown;\n  return React.createElement(GoogleMap, {\n    center: {\n      lat: coords.latitude,\n      lng: coords.longitude\n    },\n    defaultZoom: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, isMarkerShown && React.createElement(Marker, {\n    draggable: true,\n    position: {\n      lat: coords.latitude,\n      lng: coords.longitude\n    },\n    onDragEnd: position => {\n      updateLocation(position);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n}));","map":{"version":3,"sources":["/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Location/index.js"],"names":["React","withGoogleMap","withScriptjs","GoogleMap","Marker","setUser","userId","localStorage","getItem","Location","Component","constructor","props","userCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","updateUserLocation","state","latlng","lat","lng","userLocation","submitLocation","history","alert","register","replace","error","console","log","componentDidMount","render","height","MyMapComponent","updateLocation","isMarkerShown"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nimport {withGoogleMap, withScriptjs, GoogleMap, Marker } from \"react-google-maps\";\r\n\r\n//fireabse\r\nimport { setUser } from \"../../config/firebase\";\r\n\r\n//userId\r\nconst userId = localStorage.getItem(\"userId\");\r\n\r\nexport default class Location extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coords: {}\r\n    };\r\n  }\r\n\r\n    componentDidMount() {\r\n      this.userCurrentLocation();\r\n    }\r\n\r\n  userCurrentLocation = () => {\r\n    // const {coords} = this.state\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      const { latitude, longitude } = position.coords;\r\n      this.setState({ coords: { latitude, longitude } });\r\n    });\r\n  };\r\n\r\n  updateUserLocation = () => {\r\n    const { coords } = this.state;\r\n    const { lat, lng } = coords.latlng;\r\n    let userLocation = {\r\n      latitude: lat(),\r\n      longitude: lng()\r\n    };\r\n    this.setState({ coords: userLocation });\r\n  };\r\n\r\n  submitLocation = async () => {\r\n    const { coords } = this.state;\r\n    const { history } = this.props;\r\n\r\n    try {\r\n      if ((coords && !coords.latitude) || !coords.longitude) {\r\n        alert(\"Select proper location!\");\r\n        return;\r\n      } else {\r\n        await setUser(userId, { coords, register: true });\r\n        alert(\"set user location\");\r\n        history.replace(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"submit user location error ==>\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { coords } = this.state;\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        <div className=\"nestedWrapper\">\r\n          {/* {/* <h1>abc</h1> */}\r\n          {/* <div className=\"mapWrapper\"> */}\r\n            <MyMapComponent\r\n              isMarkerShown\r\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\r\n              loadingElement={<div style={{ height: `100%` }} />}\r\n              containerElement={<div style={{ height: `400px` }} />}\r\n              mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n          {/* </div> */}\r\n          <button className=\"submitButton\">Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//map component\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => {\r\n    const { coords, updateLocation, isMarkerShown } = props;\r\n    return (\r\n      <GoogleMap\r\n        center={{\r\n          lat: coords.latitude,\r\n          lng: coords.longitude\r\n        }}\r\n        defaultZoom={20}\r\n      >\r\n        {isMarkerShown && (\r\n          <Marker\r\n            draggable={true}\r\n            position={{\r\n              lat: coords.latitude,\r\n              lng: coords.longitude\r\n            }}\r\n            onDragEnd={position => {\r\n              updateLocation(position);\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n    );\r\n  })\r\n);\r\n"]},"metadata":{},"sourceType":"module"}