{"ast":null,"code":"var _jsxFileName = \"/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Home1/index.js\";\nimport React from \"react\";\nimport { logOut, getAllMeetings } from \"../../config/firebase\";\nexport default class Home1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = checkLoginState = () => {\n      const history = this.props.history;\n      const userId = localStorage.getItem(\"userId\");\n\n      if (!userId) {\n        history.replace(\"/login\");\n      }\n    };\n\n    this.handlelogOut = async () => {\n      const history = this.props.history;\n\n      try {\n        await logOut();\n        history.replace(\"/login\");\n        localStorage.removeItem(\"userId\");\n      } catch (error) {\n        console.log(\"logout erroe=>\", error);\n      }\n    };\n\n    this.state = {\n      loader: true,\n      meetings: []\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          meetings = _this$props.meetings,\n          loader = _this$props.loader;\n    const history = this.props.history;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handlelogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, loader ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Loading...\") : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Home1/index.js"],"names":["React","logOut","getAllMeetings","Home1","Component","constructor","props","componentWillMount","checkLoginState","history","userId","localStorage","getItem","replace","handlelogOut","removeItem","error","console","log","state","loader","meetings","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,uBAAvC;AAEA,eAAe,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,kBATmB,GAWnBC,eAAe,GAAG,MAAM;AAAA,YACdC,OADc,GACF,KAAKH,KADH,CACdG,OADc;AAEtB,YAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;;AACA,UAAI,CAACF,MAAL,EAAa;AACXD,QAAAA,OAAO,CAACI,OAAR,CAAgB,QAAhB;AACD;AACF,KAjBkB;;AAAA,SAmBnBC,YAnBmB,GAmBJ,YAAY;AAAA,YACjBL,OADiB,GACL,KAAKH,KADA,CACjBG,OADiB;;AAEzB,UAAI;AACF,cAAMR,MAAM,EAAZ;AACAQ,QAAAA,OAAO,CAACI,OAAR,CAAgB,QAAhB;AACAF,QAAAA,YAAY,CAACI,UAAb,CAAwB,QAAxB;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACD;AACF,KA5BkB;;AAGjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAuBDC,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKhB,KAD3B;AAAA,UACCe,QADD,eACCA,QADD;AAAA,UACWD,MADX,eACWA,MADX;AAAA,UAEAX,OAFA,GAEW,KAAKH,KAFhB,CAEAG,OAFA;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,GACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CAFF,CADF;AASD;;AA3CgD","sourcesContent":["import React from \"react\";\nimport { logOut, getAllMeetings } from \"../../config/firebase\";\n\nexport default class Home1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loader: true,\n      meetings: []\n    };\n  }\n\n  componentWillMount=\n\n  checkLoginState = () => {\n    const { history } = this.props;\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) {\n      history.replace(\"/login\");\n    }\n  };\n\n  handlelogOut = async () => {\n    const { history } = this.props;\n    try {\n      await logOut();\n      history.replace(\"/login\");\n      localStorage.removeItem(\"userId\");\n    } catch (error) {\n      console.log(\"logout erroe=>\", error);\n    }\n  };\n\n  render() {\n    const { meetings, loader } = this.props;\n    const {history} = this.props\n    return (\n      <div>\n        <button onClick={this.handlelogOut}>Logout</button>\n        <React.Fragment>\n            {loader ? <p>Loading...</p>\n            : <React.Fragment></React.Fragment>}\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}