{"ast":null,"code":"var _jsxFileName = \"/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Location/index.js\";\nimport React from 'react';\nimport './style.css';\nimport { GoogleMap, Maker } from \"react-google-maps\"; //fireabse\n\nimport { setUser } from '../../config/firebase'; //userId\n\nconst userId = localStorage.getItem('userId');\nexport default class Location extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.userCurrentLocation = () => {\n      // const {coords} = this.state\n      navigator.geolocation.getCurrentPosition(position => {\n        const _position$coords = position.coords,\n              latitude = _position$coords.latitude,\n              longitude = _position$coords.longitude;\n        this.setState({\n          coords: {\n            latitude,\n            longitude\n          }\n        });\n      });\n    };\n\n    this.updateUserLocation = () => {\n      const coords = this.state.coords;\n      const _coords$latlng = coords.latlng,\n            lat = _coords$latlng.lat,\n            lng = _coords$latlng.lng;\n      let userLocation = {\n        latitude: lat(),\n        longitude: lng()\n      };\n      this.setState({\n        coords: userLocation\n      });\n    };\n\n    this.submitLocation = async () => {\n      const coords = this.state.coords;\n      const history = this.props.history;\n\n      try {\n        if (coords && !coords.latitude || !coords.longitude) {\n          alert('Select proper location!');\n          return;\n        } else {\n          await setUser(userId, {\n            coords,\n            register: true\n          });\n          alert(\"set user location\");\n          history.replace('/');\n        }\n      } catch (error) {\n        console.log('submit user location error ==>', error);\n      }\n    };\n\n    this.state = {\n      coords: {}\n    };\n  }\n\n  componentDidMount() {\n    this.userCurrentLocation();\n  }\n\n  render() {\n    const coords = this.state.coords;\n    return React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nestedWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/saad/Documents/untitled folder/newFolder/meetUp app/src/Screens/Location/index.js"],"names":["React","GoogleMap","Maker","setUser","userId","localStorage","getItem","Location","Component","constructor","props","userCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","updateUserLocation","state","latlng","lat","lng","userLocation","submitLocation","history","alert","register","replace","error","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,mBAA/B,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,uBAAtB,C,CAEA;;AACA,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AAGA,eAAe,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,mBAXkB,GAWI,MAAK;AACvB;AACAC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAE;AAAA,iCAChBA,QAAQ,CAACC,MADO;AAAA,cACxCC,QADwC,oBACxCA,QADwC;AAAA,cAC7BC,SAD6B,oBAC7BA,SAD6B;AAE/C,aAAKC,QAAL,CAAc;AAACH,UAAAA,MAAM,EAAG;AAACC,YAAAA,QAAD;AAAYC,YAAAA;AAAZ;AAAV,SAAd;AACH,OAHD;AAIH,KAjBiB;;AAAA,SAmBlBE,kBAnBkB,GAmBG,MAAK;AAAA,YACfJ,MADe,GACL,KAAKK,KADA,CACfL,MADe;AAAA,6BAEDA,MAAM,CAACM,MAFN;AAAA,YAEdC,GAFc,kBAEdA,GAFc;AAAA,YAERC,GAFQ,kBAERA,GAFQ;AAGtB,UAAIC,YAAY,GAAG;AACfR,QAAAA,QAAQ,EAAGM,GAAG,EADC;AAEfL,QAAAA,SAAS,EAAGM,GAAG;AAFA,OAAnB;AAIA,WAAKL,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAGS;AAAV,OAAd;AACH,KA3BiB;;AAAA,SA6BlBC,cA7BkB,GA6BD,YAAS;AAAA,YACfV,MADe,GACL,KAAKK,KADA,CACfL,MADe;AAAA,YAEfW,OAFe,GAEJ,KAAKjB,KAFD,CAEfiB,OAFe;;AAItB,UAAI;AACA,YAAGX,MAAM,IAAI,CAACA,MAAM,CAACC,QAAlB,IAA8B,CAACD,MAAM,CAACE,SAAzC,EAAmD;AAC/CU,UAAAA,KAAK,CAAC,yBAAD,CAAL;AACA;AACH,SAHD,MAII;AACA,gBAAMzB,OAAO,CAACC,MAAD,EAAU;AAACY,YAAAA,MAAD;AAAUa,YAAAA,QAAQ,EAAG;AAArB,WAAV,CAAb;AACAD,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACAD,UAAAA,OAAO,CAACG,OAAR,CAAgB,GAAhB;AACH;AACJ,OAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA+CF,KAA/C;AACH;AACJ,KA9CiB;;AAEd,SAAKV,KAAL,GAAa;AACTL,MAAAA,MAAM,EAAG;AADA,KAAb;AAGH;;AAEDkB,EAAAA,iBAAiB,GAAE;AACf,SAAKvB,mBAAL;AACH;;AAuCDwB,EAAAA,MAAM,GAAG;AAAA,UACEnB,MADF,GACY,KAAKK,KADjB,CACEL,MADF;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAWH;;AA9DgD","sourcesContent":["import React from 'react'\r\nimport './style.css';\r\nimport {GoogleMap, Maker} from \"react-google-maps\"\r\n\r\n//fireabse\r\nimport {setUser} from '../../config/firebase'\r\n\r\n//userId\r\nconst userId = localStorage.getItem('userId')\r\n\r\n\r\nexport default class Location extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            coords : {} \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.userCurrentLocation()\r\n    }\r\n\r\n    userCurrentLocation = () =>{\r\n        // const {coords} = this.state\r\n        navigator.geolocation.getCurrentPosition(position=>{\r\n            const {latitude , longitude} = position.coords\r\n            this.setState({coords : {latitude , longitude}})\r\n        })\r\n    }\r\n\r\n    updateUserLocation = () =>{\r\n        const {coords} = this.state\r\n        const { lat , lng} = coords.latlng\r\n        let userLocation = {\r\n            latitude : lat(),\r\n            longitude : lng()\r\n        }\r\n        this.setState({coords : userLocation})\r\n    }\r\n\r\n    submitLocation = async()=>{\r\n        const {coords} = this.state\r\n        const {history} = this.props\r\n\r\n        try {\r\n            if(coords && !coords.latitude || !coords.longitude){\r\n                alert('Select proper location!')\r\n                return\r\n            }\r\n            else{\r\n                await setUser(userId , {coords , register : true})\r\n                alert(\"set user location\")\r\n                history.replace('/')\r\n            }\r\n        } catch (error) {\r\n            console.log('submit user location error ==>' , error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {coords} = this.state\r\n        return (\r\n            <div className='mainContainer'>\r\n                <div className='nestedWrapper'>\r\n                    {/* <h1>abc</h1>\r\n                    <div className='mapWrapper'>\r\n\r\n                    </div> */}\r\n                    <button className='submitButton'>Submit</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}