{"ast":null,"code":"import firebase, { storage } from \"firebase\";\nimport \"firebase/firestore\";\nimport { firebaseConfig } from \"./credentials\";\nfirebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.FacebookAuthProvider();\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nexport const fbLogin = userId => {\n  return auth.signInWithPopup(provider);\n};\nexport const getUser = userId => {\n  return db.collection(\"appUsers\").doc(userId).get();\n};\nexport const setUser = (userId, playload) => {\n  return db.collection(\"appUsers\").doc(userId).set(playload, {\n    merge: true\n  });\n}; //image upload method\n\nexport const uploadPictures = files => {\n  const res = Promise.all(files.map(file => {\n    const fileName = Math.round(Math.random() * 1000000);\n    return new Promise((resolve, reject) => {\n      const uploadTask = storage.ref().child(\"/images/\" + fileName + \".jpg\").put(file);\n      uploadTask.on('state_change', snapshot => {}, error => {\n        console.log('firebase pic==>', error);\n      }, () => {\n        storage.ref().child(\"/images/\" + fileName + \".jpg\").getDownloadURL();\n      }); // .then(() => {\n      //   storage\n      //     .ref()\n      //     .child(\"/images/\" + fileName + \".jpg\")\n      //     .getDownloadURL()\n      //     .then(uri => {\n      //       resolve(uri);\n      //     });\n      // });\n    });\n  }));\n  return res;\n}; //logut method\n\nexport const logOut = () => {\n  localStorage.removeItem(\"userId\");\n  return auth.signOut();\n}; //meeting collection\n\nexport const getAllMeetings = userId => {\n  return db.collection('meetings').where('userId', '==', userId).get;\n};","map":{"version":3,"sources":["/home/saad/Documents/untitled folder/newFolder/meetUp app/src/config/firebase.js"],"names":["firebase","storage","firebaseConfig","initializeApp","provider","auth","FacebookAuthProvider","db","firestore","fbLogin","userId","signInWithPopup","getUser","collection","doc","get","setUser","playload","set","merge","uploadPictures","files","res","Promise","all","map","file","fileName","Math","round","random","resolve","reject","uploadTask","ref","child","put","on","snapshot","error","console","log","getDownloadURL","logOut","localStorage","removeItem","signOut","getAllMeetings","where"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,OAAnB,QAAkC,UAAlC;AACA,OAAO,oBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEAF,QAAQ,CAACG,aAAT,CAAuBD,cAAvB;AAEA,MAAME,QAAQ,GAAG,IAAIJ,QAAQ,CAACK,IAAT,CAAcC,oBAAlB,EAAjB;AACA,MAAMC,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAX;AACA,MAAMH,IAAI,GAAGL,QAAQ,CAACK,IAAT,EAAb;AAEA,OAAO,MAAMI,OAAO,GAAGC,MAAM,IAAI;AAC/B,SAAOL,IAAI,CAACM,eAAL,CAAqBP,QAArB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,OAAO,GAAGF,MAAM,IAAI;AAC/B,SAAOH,EAAE,CACNM,UADI,CACO,UADP,EAEJC,GAFI,CAEAJ,MAFA,EAGJK,GAHI,EAAP;AAID,CALM;AAQP,OAAO,MAAMC,OAAO,GAAG,CAACN,MAAD,EAASO,QAAT,KAAsB;AAC3C,SAAOV,EAAE,CACNM,UADI,CACO,UADP,EAEJC,GAFI,CAEAJ,MAFA,EAGJQ,GAHI,CAGAD,QAHA,EAGU;AAAEE,IAAAA,KAAK,EAAE;AAAT,GAHV,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACrC,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CACVH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAjB;AACA,WAAO,IAAIP,OAAJ,CAAY,CAACQ,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,UAAU,GAAGhC,OAAO,CACvBiC,GADgB,GAEhBC,KAFgB,CAEV,aAAaR,QAAb,GAAwB,MAFd,EAGhBS,GAHgB,CAGZV,IAHY,CAAnB;AAIEO,MAAAA,UAAU,CAACI,EAAX,CAAc,cAAd,EACCC,QAAD,IAAY,CAEX,CAHD,EAICC,KAAD,IAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCF,KAAhC;AACD,OAND,EAOA,MAAI;AACFtC,QAAAA,OAAO,CAACiC,GAAR,GAAcC,KAAd,CAAoB,aAAaR,QAAb,GAAwB,MAA5C,EAAoDe,cAApD;AACD,OATD,EALoC,CAepC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAxBM,CAAP;AAyBD,GA3BD,CADU,CAAZ;AA8BA,SAAOpB,GAAP;AACD,CAhCM,C,CAkCP;;AACA,OAAO,MAAMqB,MAAM,GAAG,MAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACA,SAAOxC,IAAI,CAACyC,OAAL,EAAP;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAGrC,MAAM,IAAG;AACrC,SAAOH,EAAE,CAACM,UAAH,CAAc,UAAd,EAA0BmC,KAA1B,CAAgC,QAAhC,EAA0C,IAA1C,EAAgDtC,MAAhD,EAAwDK,GAA/D;AACD,CAFM","sourcesContent":["import firebase, { storage } from \"firebase\";\nimport \"firebase/firestore\";\nimport { firebaseConfig } from \"./credentials\";\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.FacebookAuthProvider();\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport const fbLogin = userId => {\n  return auth.signInWithPopup(provider);\n};\n\nexport const getUser = userId => {\n  return db\n    .collection(\"appUsers\")\n    .doc(userId)\n    .get();\n};\n\n\nexport const setUser = (userId, playload) => {\n  return db\n    .collection(\"appUsers\")\n    .doc(userId)\n    .set(playload, { merge: true });\n};\n\n//image upload method\nexport const uploadPictures = files => {\n  const res = Promise.all(\n    files.map(file => {\n      const fileName = Math.round(Math.random() * 1000000);\n      return new Promise((resolve, reject) => {\n        const uploadTask = storage\n          .ref()\n          .child(\"/images/\" + fileName + \".jpg\")\n          .put(file)\n          uploadTask.on('state_change', \n          (snapshot)=>{\n\n          }, \n          (error)=>{\n            console.log('firebase pic==>' , error)\n          }, \n          ()=>{\n            storage.ref().child(\"/images/\" + fileName + \".jpg\").getDownloadURL()\n          })\n          // .then(() => {\n          //   storage\n          //     .ref()\n          //     .child(\"/images/\" + fileName + \".jpg\")\n          //     .getDownloadURL()\n          //     .then(uri => {\n          //       resolve(uri);\n          //     });\n          // });\n      });\n    })\n  );\n  return res;\n};\n\n//logut method\nexport const logOut = () => {\n  localStorage.removeItem(\"userId\");\n  return auth.signOut();\n};\n\n//meeting collection\nexport const getAllMeetings = userId =>{\n  return db.collection('meetings').where('userId', '==', userId).get\n}\n"]},"metadata":{},"sourceType":"module"}