{"ast":null,"code":"import firebase, { storage } from \"firebase\";\nimport \"firebase/firestore\";\nimport { firebaseConfig } from \"./credentials\";\nfirebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.FacebookAuthProvider();\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nexport const fbLogin = userId => {\n  return auth.signInWithPopup(provider);\n};\nexport const getUser = userId => {\n  return db.collection(\"appUsers\").doc(userId).get();\n};\nexport const setUser = (userId, playload) => {\n  return db.collection(\"appUsers\").doc(userId).set(playload, {\n    merge: true\n  });\n}; // export const uploadPictures = files => {\n//   const response = Promise.all(\n//     files.map(files => {\n//       const fileName = Math.floor(Math.random() * 1000000);\n//       return new Promise((resolve, rejected) => {\n//         storage\n//           .ref()\n//           .child(\"/images\" + fileName + \".jpg\")\n//           .put(files)\n//           .then(() => {\n//             storage\n//               .ref()\n//               .child(\"images\" + fileName + \"jpg\")\n//               .getDownloadURL()\n//               .then(uri => {\n//                 resolve(uri);\n//               });\n//           });\n//       });\n//     })\n//   );\n//   return response\n// };\n\nexport const logOut = () => {\n  localStorage.removeItem('userId');\n  return auth.signOut();\n};\nexport const uploadPictures = files => {\n  const res = Promise.all(files.map(file => {\n    const fileName = Math.round(Math.random() * 1000000);\n    return new Promise((resolve, reject) => {\n      storage.ref().child(\"/images/\" + fileName + \".jpg\").put(file).then(() => {\n        storage.ref().child(\"/images/\" + fileName + \".jpg\").getDownloadURL().then(uri => {\n          resolve(uri);\n        });\n      });\n    });\n  }));\n  return res.then(result => {});\n};","map":{"version":3,"sources":["/home/saad/Documents/untitled folder/newFolder/meetUp app/src/config/firebase.js"],"names":["firebase","storage","firebaseConfig","initializeApp","provider","auth","FacebookAuthProvider","db","firestore","fbLogin","userId","signInWithPopup","getUser","collection","doc","get","setUser","playload","set","merge","logOut","localStorage","removeItem","signOut","uploadPictures","files","res","Promise","all","map","file","fileName","Math","round","random","resolve","reject","ref","child","put","then","getDownloadURL","uri","result"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,OAAnB,QAAkC,UAAlC;AACA,OAAO,oBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEAF,QAAQ,CAACG,aAAT,CAAuBD,cAAvB;AAEA,MAAME,QAAQ,GAAG,IAAIJ,QAAQ,CAACK,IAAT,CAAcC,oBAAlB,EAAjB;AACA,MAAMC,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAX;AACA,MAAMH,IAAI,GAAGL,QAAQ,CAACK,IAAT,EAAb;AAEA,OAAO,MAAMI,OAAO,GAAGC,MAAM,IAAI;AAC/B,SAAOL,IAAI,CAACM,eAAL,CAAqBP,QAArB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,OAAO,GAAGF,MAAM,IAAI;AAC/B,SAAOH,EAAE,CACNM,UADI,CACO,UADP,EAEJC,GAFI,CAEAJ,MAFA,EAGJK,GAHI,EAAP;AAID,CALM;AAOP,OAAO,MAAMC,OAAO,GAAG,CAACN,MAAD,EAASO,QAAT,KAAsB;AAC3C,SAAOV,EAAE,CACNM,UADI,CACO,UADP,EAEJC,GAFI,CAEAJ,MAFA,EAGJQ,GAHI,CAGAD,QAHA,EAGU;AAAEE,IAAAA,KAAK,EAAE;AAAT,GAHV,CAAP;AAID,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAI;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACA,SAAOjB,IAAI,CAACkB,OAAL,EAAP;AACD,CAHM;AAMP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACvC,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACxC,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAjB;AACA,WAAO,IAAIP,OAAJ,CAAY,CAACQ,OAAD,EAAUC,MAAV,KAAqB;AACtCnC,MAAAA,OAAO,CACJoC,GADH,GAEGC,KAFH,CAES,aAAaP,QAAb,GAAwB,MAFjC,EAGGQ,GAHH,CAGOT,IAHP,EAGaU,IAHb,CAGkB,MAAM;AACpBvC,QAAAA,OAAO,CACJoC,GADH,GAEGC,KAFH,CAES,aAAaP,QAAb,GAAwB,MAFjC,EAGGU,cAHH,GAIGD,IAJH,CAIQE,GAAG,IAAI;AACXP,UAAAA,OAAO,CAACO,GAAD,CAAP;AACD,SANH;AAOD,OAXH;AAYD,KAbM,CAAP;AAcD,GAhBuB,CAAZ,CAAZ;AAiBA,SAAOhB,GAAG,CAACc,IAAJ,CAASG,MAAM,IAAG,CAExB,CAFM,CAAP;AAGD,CArBM","sourcesContent":["import firebase, { storage } from \"firebase\";\nimport \"firebase/firestore\";\nimport { firebaseConfig } from \"./credentials\";\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.FacebookAuthProvider();\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport const fbLogin = userId => {\n  return auth.signInWithPopup(provider);\n};\n\nexport const getUser = userId => {\n  return db\n    .collection(\"appUsers\")\n    .doc(userId)\n    .get();\n};\n\nexport const setUser = (userId, playload) => {\n  return db\n    .collection(\"appUsers\")\n    .doc(userId)\n    .set(playload, { merge: true });\n};\n\n// export const uploadPictures = files => {\n//   const response = Promise.all(\n//     files.map(files => {\n//       const fileName = Math.floor(Math.random() * 1000000);\n//       return new Promise((resolve, rejected) => {\n//         storage\n//           .ref()\n//           .child(\"/images\" + fileName + \".jpg\")\n//           .put(files)\n//           .then(() => {\n//             storage\n//               .ref()\n//               .child(\"images\" + fileName + \"jpg\")\n//               .getDownloadURL()\n//               .then(uri => {\n//                 resolve(uri);\n//               });\n//           });\n//       });\n//     })\n//   );\n//   return response\n// };\n\nexport const logOut = ()=>{\n  localStorage.removeItem('userId')\n  return auth.signOut()\n}\n\n\nexport const uploadPictures = (files) => {\n  const res = Promise.all(files.map(file => {\n    const fileName = Math.round(Math.random() * 1000000);\n    return new Promise((resolve, reject) => {\n      storage\n        .ref()\n        .child(\"/images/\" + fileName + \".jpg\")\n        .put(file).then(() => {\n          storage\n            .ref()\n            .child(\"/images/\" + fileName + \".jpg\")\n            .getDownloadURL()\n            .then(uri => {\n              resolve(uri);\n            });\n        })\n    })\n  }))\n  return res.then(result =>{\n\n  })\n}"]},"metadata":{},"sourceType":"module"}